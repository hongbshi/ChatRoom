int epoll_create(int size);
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout);

Operation:
EPOLL_CTL_ADD  注册新的fd到epfd中；
EPOLL_CTL_MOD  修改已经注册的fd的监听事件；
EPOLL_CTL_DEL  从epfd中删除一个fd；

typedef union epoll_data {
	void *ptr;
	int fd;
	__uint32_t u32;
	__uint64_t u64;
} epoll_data_t;

struct epoll_event {
	__uint32_t events; /* Epoll events */
	epoll_data_t data; /* User data variable */
};

events:
EPOLLIN  表示对应的文件描述符可以读（包括对端SOCKET正常关闭）；
EPOLLOUT 表示对应的文件描述符可以写；
EPOLLPRI 表示对应的文件描述符有紧急的数据可读（这里应该表示有带外数据到来）；
EPOLLERR 表示对应的文件描述符发生错误；
EPOLLHUP 表示对应的文件描述符被挂断；
EPOLLET  表示将EPOLL设为边缘触发(Edge Triggered)模式，这是相对于水平触发(Level Triggered)来说的。
EPOLLONESHOT 表示只监听一次事件
  

